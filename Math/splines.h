#ifndef _SPLINES_H_
#define _SPLINES_H_
#define VERSION 1

#include "exception.h"

/**Сглаживание с использованием логарифмических сплайнов 1-го и 3-го порядка.
********************************************************************************
 *Предполагается, что входные данные представляют собой массив значений функции
 *y[i] = f(x[i]), в котором i = [0..N-1], а промежутки между любыми x[k] и x[k+1] равные.
 *Функции генерируют исключение которое можно поймать как обычное std::exception. Исключение
 *генерируется если:
 *
 **1. В массиве входных данных есть значения < 1.0
 **2. В массиве статистических весов есть значения < 0
 **3. Произошла ошибка выделения памяти.*/

//Сплайн первого порядка:
void logspline1
    (
        double* yy, //выходной массив данных
        const double* y, //входной массив данных
        const double* w, //статистические веса точек, если вес равен нулю то точка не меняет своего положения
        int n, //число элементов в массиве даных
        double p //параметр, регулирующий гладкость, должен быть 0.0<=p
                 //p = 0.0 - возвращается исходный массив
    ) throw(math::exception);

//Сплайн третьего порядка:
void logspline3
    (
        double* yy, //выходной массив данных
        const double* y, //входной массив данных
        const double* w, //статистические веса точек, если вес равен нулю то точка не меняет своего положения
        int n, //число элементов в массиве даных
        double p //параметр, регулирующий гладкость, должен быть 0.0<=p
                 //p = 0.0 - возвращается исходный массив
    ) throw(math::exception);

#endif // _SPLINES_H_
